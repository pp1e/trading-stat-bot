import json
from json import JSONDecodeError

import telebot

import constants
from config.bot_config import BOT_CONFIG


bot = telebot.TeleBot(BOT_CONFIG['token'])


def calcAnte(balance, dep):
    return round(balance * (dep / constants.OVERALL_DEP), 2)


def generateStatistic():
    with open(constants.DATA_FILE, 'r') as dataFile:
        data = json.loads(dataFile.read())

    balance = data['balance']
    currentWeekProfit = data['currentWeekProfit']
    profit = data['profit']

    return f"""
** –¢–ï–ö–£–©–ê–Ø –ù–ï–î–ï–õ–Ø **

**–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é:**
+{data['currentWeekProfitPercents']}% | +${currentWeekProfit}

üîπ**–í–∞–Ω—è: +${calcAnte(currentWeekProfit, constants.IVAN_DEP)}**
–î–µ–ø–æ–∑–∏—Ç: ${constants.IVAN_DEP}
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${calcAnte(balance, constants.IVAN_DEP)}
–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: +${calcAnte(profit, constants.IVAN_DEP)}

üîπ**–°–∞–Ω—è: +${calcAnte(currentWeekProfit, constants.ALEX_DEP)}**
–î–µ–ø–æ–∑–∏—Ç: ${constants.ALEX_DEP}
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${calcAnte(balance, constants.ALEX_DEP)}
–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: +${calcAnte(profit, constants.ALEX_DEP)}

üîπ**–î–µ–Ω: +${calcAnte(currentWeekProfit, constants.DENIS_DEP)}**
–î–µ–ø–æ–∑–∏—Ç: ${constants.DENIS_DEP}
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${calcAnte(balance, constants.DENIS_DEP)}
–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: +${calcAnte(profit, constants.DENIS_DEP)}

**–í—Å–µ–≥–æ:** ${constants.OVERALL_DEP} -> ${balance}

[–°–õ–ï–î–ò–¢–¨](https://fxmonitor.online/u/UQEvKqKD?view=pro)
        """


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    statBtn = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    markup.add(statBtn)
    bot.send_message(message.chat.id, "–Ø —Ä–æ–±–æ—Ç-–¥–æ–ª–±–æ–µ–±!ü§ñ", reply_markup=markup)


@bot.message_handler(func=lambda message: True)
def echo_message(message):
    try:
        if message.text == "–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É":
            bot.send_message(message.chat.id, generateStatistic(), parse_mode='Markdown')
        else:
            bot.send_message(message.chat.id, '–∏–¥–∏ –Ω–∞—Ö—É–π')
    except JSONDecodeError:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')
