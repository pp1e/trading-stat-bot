import json
from json import JSONDecodeError

import telebot
from telebot import types

import constants
from database import database
from config.bot_config import BOT_CONFIG

bot = telebot.TeleBot(BOT_CONFIG['token'])
users = database.database.fetch_user_tags()
add_deposit_state = False


def calcAnte(balance, dep):
    return round(balance * (dep / constants.OVERALL_DEP), 2)


def generateStatistic():
    with open(constants.DATA_FILE, 'r') as dataFile:
        data = json.loads(dataFile.read())

    balance = data['balance']
    currentWeekProfit = data['currentWeekProfit']
    profit = data['profit']

    return f"""
** –¢–ï–ö–£–©–ê–Ø –ù–ï–î–ï–õ–Ø **

**–ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ –∑–∞ –Ω–µ–¥–µ–ª—é:**
+{data['currentWeekProfitPercents']}% | +${currentWeekProfit}

üîπ**–í–∞–Ω—è: +${calcAnte(currentWeekProfit, constants.IVAN_DEP)}**
–î–µ–ø–æ–∑–∏—Ç: ${constants.IVAN_DEP}
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${calcAnte(balance, constants.IVAN_DEP)}
–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: +${calcAnte(profit, constants.IVAN_DEP)}

üîπ**–°–∞–Ω—è: +${calcAnte(currentWeekProfit, constants.ALEX_DEP)}**
–î–µ–ø–æ–∑–∏—Ç: ${constants.ALEX_DEP}
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${calcAnte(balance, constants.ALEX_DEP)}
–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: +${calcAnte(profit, constants.ALEX_DEP)}

üîπ**–î–µ–Ω: +${calcAnte(currentWeekProfit, constants.DENIS_DEP)}**
–î–µ–ø–æ–∑–∏—Ç: ${constants.DENIS_DEP}
–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: ${calcAnte(balance, constants.DENIS_DEP)}
–û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å: +${calcAnte(profit, constants.DENIS_DEP)}

**–í—Å–µ–≥–æ:** ${constants.OVERALL_DEP} -> ${balance}

[–°–õ–ï–î–ò–¢–¨](https://fxmonitor.online/u/UQEvKqKD?view=pro)
        """


@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç–∏–∫!')
    username = message.from_user.username
    database.database.add_user(username)
    button_message(message)


@bot.message_handler(commands=['button'])
def button_message(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    statButton = types.KeyboardButton("–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
    depositButton = types.KeyboardButton("–í–Ω–µ—Å—Ç–∏ –¥–µ–ø–æ–∑–∏—Ç")
    markup.add(statButton)
    markup.add(depositButton)
    bot.send_message(message.chat.id, "–Ø —Ä–æ–±–æ—Ç-–ø–æ–¥–ø–∏–ª–æ—Ç–æ—á–Ω–∏–∫!ü§ñ", reply_markup=markup)


@bot.message_handler(func=lambda message: message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
def view_statistic(message):
    try:
        bot.send_message(message.chat.id, generateStatistic(), parse_mode='Markdown')
    except JSONDecodeError():
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')


@bot.message_handler(func=lambda message: message.text == '–í–Ω–µ—Å—Ç–∏ –¥–µ–ø–æ–∑–∏—Ç')
def add_deposit(message):
    try:
        username = message.from_user.username
        if database.database.is_user_admin(username):
            deposit_buttons(message, users)
            add_deposit_state = True
        else:
            bot.send_message(message.chat.id, '—Ç—ã –∞—Ä–∏—à–∫–∞')

    except JSONDecodeError:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')


@bot.message_handler(func=lambda message: message.text == '–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥')
def to_start(message):
    try:
        button_message(message)
    except JSONDecodeError:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')


@bot.message_handler(func=lambda message: message.text in users)
def choose_user_refill(message):
    try:
        if add_deposit_state:
            bot.send_message(message.chat.id, '–°–∫–æ–ª—å–∫–æ?')
    except JSONDecodeError:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')


@bot.message_handler(func=lambda message: add_deposit_state == False)
def echo_message(message):
    try:
        bot.send_message(message.chat.id, '–Ø —Ç—É–ø–∞—è –∞—Ä–∏—à–∫–∞. –•–æ–∑—è–∏–Ω –µ—â–µ –Ω–µ –Ω–∞—É—á–∏–ª –º–µ–Ω—è —ç—Ç–æ–º—É :(')
    except JSONDecodeError:
        bot.send_message(message.chat.id, '–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö! –ü–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑')


def deposit_buttons(message, names):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)

    for name in names:
        markup.add(types.KeyboardButton(name))

    markup.add(types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥"))
    bot.send_message(message.chat.id, '–ö—Ç–æ –≤–Ω–µ—Å –±–∞–±–ª–æ?', reply_markup=markup)

    deposit(message)


def deposit(message):
    info = [message.text]
    bot.send_message(message.chat.id, f'–ö–∞–∫—É—é —Å—É–º–º—É –≤–Ω–µ—Å {message.text}')
# –ü–æ—á–∏—Ç–∞–π
# https://qaa-engineer.ru/proverka-nazhatiya-inline-knopok-telebot/
